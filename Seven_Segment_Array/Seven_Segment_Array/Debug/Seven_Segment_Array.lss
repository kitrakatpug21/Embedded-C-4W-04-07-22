
Seven_Segment_Array.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  000000d6  0000014a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000015e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000190  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000699  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005de  00000000  00000000  00000885  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000278  00000000  00000000  00000e63  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000010dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000035f  00000000  00000000  00001100  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000094  00000000  00000000  0000145f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  000014f3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ed       	ldi	r30, 0xD6	; 214
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 69 00 	jmp	0xd2	; 0xd2 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
						0b01111111,
						0b01101111};

int main(void)
{
	DDRC = 0b01111111;
  82:	8f e7       	ldi	r24, 0x7F	; 127
  84:	84 bb       	out	0x14, r24	; 20
	DDRD = 0b01111111;
  86:	81 bb       	out	0x11, r24	; 17
				PORTC = segment[i];
				PORTD = segment[j];
				_delay_ms(100);
			}
		}*/
		for(int i = 9; i >= 0 ; i--)
  88:	49 e0       	ldi	r20, 0x09	; 9
  8a:	50 e0       	ldi	r21, 0x00	; 0
  8c:	1f c0       	rjmp	.+62     	; 0xcc <main+0x4a>
		{
			for (int j = 9; j >= 0; j--)
			{
				PORTC = segment[i];
  8e:	fa 01       	movw	r30, r20
  90:	ee 0f       	add	r30, r30
  92:	ff 1f       	adc	r31, r31
  94:	e0 5a       	subi	r30, 0xA0	; 160
  96:	ff 4f       	sbci	r31, 0xFF	; 255
  98:	20 81       	ld	r18, Z
  9a:	25 bb       	out	0x15, r18	; 21
				PORTD = segment[j];
  9c:	fc 01       	movw	r30, r24
  9e:	ee 0f       	add	r30, r30
  a0:	ff 1f       	adc	r31, r31
  a2:	e0 5a       	subi	r30, 0xA0	; 160
  a4:	ff 4f       	sbci	r31, 0xFF	; 255
  a6:	20 81       	ld	r18, Z
  a8:	22 bb       	out	0x12, r18	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  aa:	2f ef       	ldi	r18, 0xFF	; 255
  ac:	30 e7       	ldi	r19, 0x70	; 112
  ae:	62 e0       	ldi	r22, 0x02	; 2
  b0:	21 50       	subi	r18, 0x01	; 1
  b2:	30 40       	sbci	r19, 0x00	; 0
  b4:	60 40       	sbci	r22, 0x00	; 0
  b6:	e1 f7       	brne	.-8      	; 0xb0 <main+0x2e>
  b8:	00 c0       	rjmp	.+0      	; 0xba <main+0x38>
  ba:	00 00       	nop
				_delay_ms(100);
			}
		}*/
		for(int i = 9; i >= 0 ; i--)
		{
			for (int j = 9; j >= 0; j--)
  bc:	01 97       	sbiw	r24, 0x01	; 1
  be:	02 c0       	rjmp	.+4      	; 0xc4 <main+0x42>
  c0:	89 e0       	ldi	r24, 0x09	; 9
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	99 23       	and	r25, r25
  c6:	1c f7       	brge	.-58     	; 0x8e <main+0xc>
				PORTC = segment[i];
				PORTD = segment[j];
				_delay_ms(100);
			}
		}*/
		for(int i = 9; i >= 0 ; i--)
  c8:	41 50       	subi	r20, 0x01	; 1
  ca:	51 09       	sbc	r21, r1
  cc:	55 23       	and	r21, r21
  ce:	c4 f7       	brge	.-16     	; 0xc0 <main+0x3e>
  d0:	db cf       	rjmp	.-74     	; 0x88 <main+0x6>

000000d2 <_exit>:
  d2:	f8 94       	cli

000000d4 <__stop_program>:
  d4:	ff cf       	rjmp	.-2      	; 0xd4 <__stop_program>
